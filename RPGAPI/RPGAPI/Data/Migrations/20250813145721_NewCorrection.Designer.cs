// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RPGAPI.Data;

#nullable disable

namespace RPGAPI.Migrations
{
    [DbContext(typeof(RPGDbContext))]
    [Migration("20250813145721_NewCorrection")]
    partial class NewCorrection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RPGAPI.Models.Faction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("Resources")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Factions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Knights of Valor",
                            Resources = "[\"Big army\",\"Love of the people\"]"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wizards of the Arcane",
                            Resources = "[\"Big library\",\"A lot of money\"]"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rangers of the Wild",
                            Resources = "[\"Syvian magic\"]"
                        });
                });

            modelBuilder.Entity("RPGAPI.Models.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FactionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgressMade")
                        .HasColumnType("int");

                    b.Property<int>("ProgressNecessary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FactionId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Proteger o reino contra invasores.",
                            FactionId = 1,
                            Name = "Defender o Reino",
                            ProgressMade = 0,
                            ProgressNecessary = 100
                        },
                        new
                        {
                            Id = 2,
                            Description = "Encontrar o artefato lendário perdido.",
                            FactionId = 2,
                            Name = "Descobrir Artefato Antigo",
                            ProgressMade = 0,
                            ProgressNecessary = 50
                        },
                        new
                        {
                            Id = 3,
                            Description = "Conquistar novas terras para a facção.",
                            FactionId = 1,
                            Name = "Expandir Território",
                            ProgressMade = 0,
                            ProgressNecessary = 75
                        },
                        new
                        {
                            Id = 4,
                            Description = "Desenvolver um novo feitiço poderoso.",
                            FactionId = 2,
                            Name = "Aprimorar Magia",
                            ProgressMade = 0,
                            ProgressNecessary = 40
                        },
                        new
                        {
                            Id = 5,
                            Description = "Firmar uma aliança estratégica com os elfos.",
                            FactionId = 3,
                            Name = "Aliança com Elfos",
                            ProgressMade = 0,
                            ProgressNecessary = 30
                        });
                });

            modelBuilder.Entity("RPGAPI.Models.Goal", b =>
                {
                    b.HasOne("RPGAPI.Models.Faction", "Faction")
                        .WithMany("Goals")
                        .HasForeignKey("FactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faction");
                });

            modelBuilder.Entity("RPGAPI.Models.Faction", b =>
                {
                    b.Navigation("Goals");
                });
#pragma warning restore 612, 618
        }
    }
}
